import 'package:flutter/material.dart';

class DashboardScreen extends StatelessWidget {
  const DashboardScreen({super.key});

  @override
  Widget build(BuildContext context) {
    final theme = Theme.of(context);
    final textTheme = theme.textTheme;
    final primary = theme.colorScheme.primary;

    return Scaffold(
      appBar: AppBar(
        title: const Text('–ü–∞–Ω–µ–ª—å –¥–µ–∫–∞–Ω–∞'),
        actions: [
          IconButton(
            icon: const Icon(Icons.notifications),
            onPressed: () {
              // TODO: –ü–µ—Ä–µ—Ö–æ–¥ –∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º
            },
          ),
        ],
      ),
      body: ListView(
        padding: const EdgeInsets.all(16),
        children: [
          Text('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –¥–µ–∫–∞–Ω üëã', style: textTheme.titleLarge),
          const SizedBox(height: 16),

          _SectionTitle('üì• –ü–æ—Å–ª–µ–¥–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è'),
          _NotificationTile(text: '–°–∏–ª–∞–±—É—Å –ø–æ "–ò—Å—Ç–æ—Ä–∏—è –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–∞" –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É'),
          _NotificationTile(text: '–≠–∫–∑–∞–º–µ–Ω –ø–æ "–§–∏–∑–∏–∫–∞ 1" –æ–±–Ω–æ–≤–ª—ë–Ω –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–º'),

          const SizedBox(height: 24),
          _SectionTitle('üéØ –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è'),
          Wrap(
            spacing: 12,
            runSpacing: 12,
            children: [
              _ActionButton(title: '–°–∏–ª–∞–±—É—Å—ã', icon: Icons.menu_book, onTap: () {}),
              _ActionButton(title: '–≠–∫–∑–∞–º–µ–Ω—ã', icon: Icons.assignment, onTap: () {}),
              _ActionButton(title: '–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏', icon: Icons.group, onTap: () {}),
              _ActionButton(title: '–û—Ç—á—ë—Ç—ã', icon: Icons.bar_chart, onTap: () {}),
            ],
          ),

          const SizedBox(height: 24),
          _SectionTitle('üìå –ò–∑–±—Ä–∞–Ω–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã'),
          _FavoriteTile(
            title: '–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞ 1 ‚Äî –°–∏–ª–∞–±—É—Å',
            status: '–û–∂–∏–¥–∞–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏',
            color: Colors.orange,
          ),
          _FavoriteTile(
            title: '–ë–∏–æ–ª–æ–≥–∏—è ‚Äî –≠–∫–∑–∞–º–µ–Ω',
            status: '–ù–∞ –¥–æ—Ä–∞–±–æ—Ç–∫–µ',
            color: Colors.redAccent,
          ),

          const SizedBox(height: 24),
          _SectionTitle('üìÖ –°–æ–±—ã—Ç–∏—è'),
          _NotificationTile(text: '5 –º–∞—è ‚Äî –ö—Ä–∞–π–Ω–∏–π —Å—Ä–æ–∫ –ø–æ —Å–∏–ª–∞–±—É—Å–∞–º'),
          _NotificationTile(text: '10 –º–∞—è ‚Äî –û—Ç—á—ë—Ç –ø–æ –∫–∞—Ñ–µ–¥—Ä–∞–º'),
        ],
      ),
    );
  }
}

class _SectionTitle extends StatelessWidget {
  final String title;
  const _SectionTitle(this.title);

  @override
  Widget build(BuildContext context) {
    return Text(title,
        style: Theme.of(context).textTheme.titleMedium?.copyWith(fontWeight: FontWeight.w600));
  }
}

class _NotificationTile extends StatelessWidget {
  final String text;
  const _NotificationTile({required this.text});

  @override
  Widget build(BuildContext context) {
    return ListTile(
      contentPadding: EdgeInsets.zero,
      leading: const Icon(Icons.notifications_none),
      title: Text(text),
    );
  }
}

class _FavoriteTile extends StatelessWidget {
  final String title;
  final String status;
  final Color color;

  const _FavoriteTile({
    required this.title,
    required this.status,
    required this.color,
  });

  @override
  Widget build(BuildContext context) {
    return Card(
      child: ListTile(
        title: Text(title),
        subtitle: Text(status),
        leading: Icon(Icons.star, color: color),
        trailing: const Icon(Icons.arrow_forward_ios, size: 16),
        onTap: () {
          // TODO: –ø–µ—Ä–µ—Ö–æ–¥ –∫ –¥–æ–∫—É–º–µ–Ω—Ç—É
        },
      ),
    );
  }
}

class _ActionButton extends StatelessWidget {
  final String title;
  final IconData icon;
  final VoidCallback onTap;

  const _ActionButton({
    required this.title,
    required this.icon,
    required this.onTap,
  });

  @override
  Widget build(BuildContext context) {
    return ElevatedButton.icon(
      onPressed: onTap,
      icon: Icon(icon, size: 20),
      label: Text(title),
      style: ElevatedButton.styleFrom(
        padding: const EdgeInsets.symmetric(horizontal: 20, vertical: 14),
        backgroundColor: Theme.of(context).colorScheme.primaryContainer,
        foregroundColor: Theme.of(context).colorScheme.onPrimaryContainer,
        shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(12)),
      ),
    );
  }
}
